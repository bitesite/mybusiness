<div id="playbook-pages-product-managers">
  <h1>Product Managers</h1>
  <p>
    Scrum Express Product Managers drive the direction of the product and decide
    what's going to be built and when it's going to be built. At BiteSite, the product managers
    include representatives from the client, as well as the Project Lead from BiteSite.
  </p>

  <h2>What do Product Managers do?</h2>
  <p>
    Coming Soon
  </p>

  <h2>How do they do it?</h2>

  <p>
    So now that we know what Product Managers do, how do they do it?
  </p>

  <h3>Be comfortable with shipping 'imperfect' software</h3>
  <p>
    Product Managers and Product Testers have the decision of how well developed a
    feature has to be before it gets into developers' hands, and then how well implemented
    it has to be before it gets into users' hands. When making these decisions, Product Managers
    should know that trying to ship 'perfect' software is a bad practice.
  </p>

  <p>
    First of all, trying to define 'perfect' software usually involves making a bunch of
    assumptions about your users. You'll assume they want to use it a certain way or that
    they'll use it at all. You'll assume that they won't be happy if a certain part is not
    present or that it'll cause huge issues.
  </p>

  <p>
    Secondly, the longer you try to perfect software, the longer it sits in a silo without
    real users using it and without getting good feedback.
  </p>

  <p>
    Being comfortable with shipping 'imperfect' software means you make less assumptions and
    that you get feedback quicker. These two things will lead to implementing further tweaks
    that are based on real user feedback and that get into the users' hands quicker.
  </p>

  <h3>Not everything is Urgent</h3>
  <p>
    The hardest thing a Product Manager has to do, especially on the client side, is realize
    that there is a finite number of resources you're dealing with. That means that Product Managers
    have to realize that not everything can done right away.
  </p>

  <p>
    The best way to approach this is to think that <b>not everything is urgent</b> and things can wait.
    The two big questions we ask ourselves when considering if something needs to be <b>hotfixed</b> or not is:

    <ul>
      <li>
        <b>How long has the issue been around?</b> - If the issue has been around for months, then waiting
        one more week to properly fit a fix into the Sprint and have it go through proper testing is
        probably worth it. Otherwise you risk introducing a bigger issue.
      </li>

      <li>
        <b>Is there a workaround?</b> - If there is a way to workaround the issue, then again, it's probably
        worth waiting a week to properly slot a fix into a proper Sprint and have it go through proper
        testing.
      </li>
    </ul>
  </p>
</div>